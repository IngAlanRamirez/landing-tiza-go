---
import Layout from "../layouts/Layout.astro";
import Hero from "../components/Hero.astro";
import SloganRotativo from "../components/SloganRotativo.astro";
import Features from "../components/Features.astro";
import FAQ from "../components/FAQ.astro";
import Contacto from "../components/Contacto.astro";
import Footer from "../components/Footer.astro";
import WhatsAppButton from "../components/WhatsAppButton.astro";
---

<Layout title="Tiza Go - La app de entregas m√°s r√°pida de Tizayuca">
  <main>
    <!-- Indicador de resoluci√≥n para testing (solo en desarrollo) -->
    <div
      id="resolution-indicator"
      class="fixed top-4 left-4 z-50 bg-black/80 text-white text-xs px-3 py-2 rounded-lg backdrop-blur-sm transition-opacity duration-300 opacity-0 hover:opacity-100"
    >
      <div class="block sm:hidden">üì± Mobile (&lt; 640px)</div>
      <div class="hidden sm:block md:hidden">üì± Tablet (640px - 768px)</div>
      <div class="hidden md:block lg:hidden">üíª Desktop (768px - 1024px)</div>
      <div class="hidden lg:block xl:hidden">üñ•Ô∏è Large (1024px - 1280px)</div>
      <div class="hidden xl:block">üñ•Ô∏è XL (&gt; 1280px)</div>
    </div>

    <Hero />
    <SloganRotativo />
    <Features />
    <FAQ />
    <Contacto />
    <Footer />
    <WhatsAppButton />
  </main>
</Layout>

<script>
  // Script para mostrar el indicador de resoluci√≥n en desarrollo
  document.addEventListener("DOMContentLoaded", function () {
    const indicator = document.getElementById("resolution-indicator");
    let timeout: NodeJS.Timeout;

    // Mostrar el indicador por 3 segundos al cargar la p√°gina
    if (indicator) {
      indicator.style.opacity = "1";
      timeout = setTimeout(() => {
        indicator.style.opacity = "0";
      }, 3000);
    }

    // Mostrar/ocultar con tecla 'R' para testing responsive
    document.addEventListener("keydown", function (e) {
      if (e.key.toLowerCase() === "r" && indicator) {
        if (indicator.style.opacity === "1") {
          indicator.style.opacity = "0";
        } else {
          indicator.style.opacity = "1";
          clearTimeout(timeout);
          timeout = setTimeout(() => {
            indicator.style.opacity = "0";
          }, 5000);
        }
      }
    });
  });
</script>

<style>
  /* Estilos adicionales para validaci√≥n responsive */
  body {
    overflow-x: hidden;
  }

  /* Asegurar que no haya scroll horizontal */
  * {
    box-sizing: border-box;
  }

  /* Debug grid para desarrollo (solo visible con tecla 'G') */
  .debug-grid {
    background-image: linear-gradient(rgba(255, 0, 0, 0.1) 1px, transparent 1px),
      linear-gradient(90deg, rgba(255, 0, 0, 0.1) 1px, transparent 1px);
    background-size: 20px 20px;
  }
</style>
